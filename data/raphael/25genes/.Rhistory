for (i in 1:10000)
{
sum = sum + dnorm(y, mean = x[i], sd = 1.1)
}
sum/10000
dnorm(y, mean = x[i], sd = 1.1)
x
x[1]
dnorm(y, mean = x[i], sd = 1.1)
log(dnorm(y, mean = x[i], sd = 1.1))
xx<-log(dnorm(y, mean = x[i], sd = 1.1))
sum(exp(xx))
log(sum(exp(xx)))
xx
xx<-sum(log(dnorm(y, mean = x[i], sd = 1.1)))
xx
# MC estimate of \int p(y|x) p(x) dx
# p(x) = N(2.1, 1.3)
# p(y|x) = N(x, 1.1)
y<-c(2.8888530137919219)
x<-rnorm(10000, 2.1, 1.3)
sum<-0
i
dnorm(y, mean = x[i], sd = 1.1)
sum<-0
for (i in 1:10000)
{
sum<-sum + dnorm(y, mean = x[i], sd = 1.1)
}
sum/10000
log(sum) - log(10000)
y<-c(2.8888530137919219)
N<-1000000
x<-rnorm(N, 2.1, 1.3)
sum<-0
for (i in 1:N)
{
sum<-sum + dnorm(y, mean = x[i], sd = 1.1)
}
log(sum) - log(N)
set.seed(1)
x<-rnorm(N, 2.1, 1.3)
sum<-0
for (i in 1:N)
{
sum<-sum + dnorm(y, mean = x[i], sd = 1.1)
}
log(sum) - log(N)
set.seed(2)
x<-rnorm(N, 2.1, 1.3)
sum<-0
for (i in 1:N)
{
sum<-sum + dnorm(y, mean = x[i], sd = 1.1)
}
log(sum) - log(N)
y<-c(4.5918215298273308)
N<-10000
set.seed(2)
x<-rnorm(N, 2.1, 1.3)
sum<-0
for (i in 1:N)
{
sum<-sum + dnorm(y, mean = x[i], sd = 1.1)
}
log(sum) - log(N)
exp(-0.1)
exp(-0.01)
exp(0.01)
exp(-4.45808)
exp(-4.35315)
x<-c(0.0002000000000000002,
0.00026666666666666668,
0.00053333333333333293,
0.00053333333333333293,
0.00079999999999999949,
0.0010666666666666659,
0.00053333333333333293,
0.00053333333333333293,
0.00053333333333333293,
0.00026666666666666668)
sum(x)
x<-c(0.067226890756302463
, 0.26890756302520991
, 0.067226890756302463
, 0.10084033613445371
, 0.20168067226890746
, 0.00840336134453782
, 0.00840336134453782
, 0.067226890756302463
, 0.00840336134453782)
sum(x)
x<-c(0.11538461538461536
, 0.11538461538461536
, 0.038461538461538478
, 0.038461538461538478
, 0.15384615384615385
, 0.11538461538461536
, 0.11538461538461536
, 0.038461538461538478
, 0.11538461538461536)
sum(x)
x<-read.csv("/Users/seonghwanjun/Dropbox/Research/single-cell-research/repos/LPM/simulated_data/model_selection/npatients320/rep1/dat.csv", header=F)
x
dim(x)
x[,23]
y<-read.csv("/Users/seonghwanjun/Dropbox/Research/single-cell-research/repos/LPM/simulated_data/model_selection/npatients320/rep1/dat.csv", header=F)
x<-read.csv("/Users/seonghwanjun/Dropbox/Research/single-cell-research/repos/LPM/simulated_data/model_selection/npatients320/rep1/mut_matrix.csv", header=F)
x[,23]
y[,23]
sum(x[,23])
sum(y[,23])
sum(x[,24])
sum(x[,22])
c(sum(x[,23]), sum(y[,23]))
c(sum(x[,22]), sum(y[,22]))
c(sum(x[,23]), sum(y[,23]))
x<-c(-4298.6, -3942.13, -3610.5, -3345.27, -3242.5)
plot(1:length(x), x, type='l')
points(1:length(x), x, pch=19)
x<-c(-4298.6, -3942.13, -3610.5, -3345.27, -3242.5, -3198.06)
plot(1:length(x), x, type='l')
points(1:length(x), x, pch=19)
x<-c(-4298.6, -3942.13, -3610.5, -3345.27, -3242.5, -3198.06, -3193.87, -3237.66, -3343.69)
plot(1:length(x), x, type='l')
points(1:length(x), x, pch=19)
exp(-3995.0223382735021)
exp(2)
exp(20)
log(exp(20))
exp(100)
exp(400)
exp(1000)
exp(-20)
diff = -3995.0223382735021 - -3972.8078878261385
diff
exp_diff <- exp(diff)
exp_diff
x = -3995.0223382735021
y <- -3972.8078878261385
diff <- x - y
exp_diff <- exp(diff)
exp_diff
x = -3995.0223382735021
y <- -3972.8078878261385
diff <- x - y
exp_diff <- exp(diff)
if (exp_diff <= 1.0) {
ret <- x + log(1.0 - diff)
} else {
ret <- y + log(diff - 1.0)
}
ret
x = -3995.0223382735021
y <- -3972.8078878261385
diff <- y - x
exp_diff <- exp(diff)
if (exp_diff <= 1.0) {
ret <- x + log(1.0 - diff)
} else {
ret <- y + log(diff - 1.0)
}
ret
x = -3995.0223382735021
y <- -3972.8078878261385
diff <- y - x
exp_diff <- exp(diff)
if (exp_diff <= 1.0) {
ret <- x + log(1.0 - diff)
} else {
ret <- x + log(diff - 1.0)
}
ret
ret
x = -3995.0223382735021
y <- -3972.8078878261385
diff <- y - x
exp_diff <- exp(diff)
if (exp_diff <= 1.0) {
ret <- x + log(1.0 - diff)
} else {
ret <- x + log(diff - 1.0)
}
2*ret
x = -3995.0223382735021
y <- -3972.8078878261385
diff <- y - x
exp_diff <- exp(diff)
if (exp_diff <= 1.0) {
ret <- x + log(1.0 - diff)
} else {
ret <- x + log(diff - 1.0)
}
2*ret
x = -3995.0223382735021
y <- -3972.8078878261385
diff <- y - x
exp_diff <- exp(diff)
if (exp_diff <= 1.0) {
ret <- x + log(1.0 - exp_diff)
} else {
diff <- x - y
exp_diff <- exp(diff)
ret <- y + log(exp_diff - 1.0)
}
2*ret
x = -3995.0223382735021
y <- -3972.8078878261385
diff <- y - x
exp_diff <- exp(diff)
if (exp_diff <= 1.0) {
ret <- x + log(1.0 - exp_diff)
} else {
ret <- -Inf
}
2*ret
diff
0.8*0.1^4
log(0.8*0.1^4)
log(0.2^5)
x<-scan()
mean(x)
x<-scan()
mean(x)
x<-scan()
mean(x)
var(x)
sd(x)
y<-(x - mean(x))
y
sd(y)
y
d <- 0.027
e <- 0.1321
(1 - d) * (1 - e) + d * e
x <- (1 - d) * (1 - e) + d * e
log(x)
y <- e * (1 - e)
log(x) + log(y)
log(x) + log(x)
l1<-log(x) + log(y)
l2<-log(x) + log(x)
l1 + l2
log(exp(l1) + exp(l2))
log(exp(l1) + exp(l2))
x<-c(-2938.57, -2437.12, -2201.07, -2164.3, -2180.29, -2341.66, -2422.88, -2520.8, -2593.46)
plot(1:length(x), x, type='l')
points(1:length(x), x, pch=19)
abline(v = 5, col='red')
x<-c(-2938.57, -2437.12, -2201.07, -2164.3, -2180.29, -2341.66, -2422.88, -2520.8, -2593.46)
plot(1:length(x), x, type='l', xlab = "Model length", ylab="Estimate of model posterior")
points(1:length(x), x, pch=19)
abline(v = 5, col='red')
x<-c(-1746.62, -1665.55, -1587.11, -1546.76, -1564.41, -1584.4, -1651.98)
plot(1:length(x), x, type='l')
points(1:length(x), x, pch=19)
dat<-read.csv("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/pathway_samples.csv", header=F)
colMeans(dat)
params5<-read.csv("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/params.csv", header=F)
params5<-read.csv("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/params5.csv", header=F)
plot(density(params5$V1))
params5<-read.csv("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/params5.csv", header=F)
plot(density(params5$V1), main="Flip back probability posterior")
plot(density(params5$V2), main="Background probability posterior")
library(ggplot2)
names(params5)<-c("FBP", "BGP")
ggplot(params5, aes(FBP)) + geom_density()
p<-p+theme_bw()
p
p<-ggplot(params5, aes(FBP)) + geom_density()
p<-p+theme_bw()
p
p<-p+theme_bw()+ggtitle("Posterior of FBP")
p
ggsave("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/fbp5.pdg", p)
ggsave("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/fbp5.pdf", p)
p<-ggplot(params5, aes(BGP)) + geom_density()
p<-p+theme_bw()+ggtitle("Posterior of BGP")
ggsave("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/bgp5.pdf", p)
params4<-read.csv("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/params4.csv", header=F)
names(params4)<-c("FBP", "BGP")
p<-ggplot(params4, aes(FBP)) + geom_density()
p<-p+theme_bw()+ggtitle("Posterior of FBP")
ggsave("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/fbp4.pdf", p)
p<-ggplot(params4, aes(BGP)) + geom_density()
p<-p+theme_bw()+ggtitle("Posterior of BGP")
ggsave("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/bgp4.pdf", p)
dat<-read.csv("~/Dropbox/Research/single-cell-research/repos/LPM/data/dat.csv", header=F)
colSums(dat)
dat<-read.csv("~/Dropbox/Research/single-cell-research/repos/LPM/data/colon_cancer.csv", header=T)
colSums(dat)
x<-rnorm(n = 10000, sd = 0.05)
hist(x)
x<-rnorm(n = 10000, sd = 0.02)
hist(x)
dat<-read.csv("~/Dropbox/Research/single-cell-research/repos/linear-progression/analysis/params500.csv", header=F)
hist(dat$V1)
hist(dat$V2)
hist(dat$V1)
dat<-read.csv("~/Dropbox/Research/single-cell-research/repos/LPM/data/params.csv", header=T)
hist(dat$FBP)
plot(density(dat$FBP))
plot(density(dat$BGP))
plot(dat)
plot(dat, pch=19)
plot(dat, pch=19, xlim=c(0,0.5), ylim=c(0,0.5))
corr(dat)
cor(dat)
0.00148831 * 100
0.00148831 * 100 * 100
# unfiltered READ and COAD data
read <- read.csv("READ/TCGA.READ.mutect.faa5f62a-2731-4867-a264-0e85b7074e87.DR-10.0.somatic.maf", sep="\t", header=T, skip = 5)
temp<-read.csv("~/Dropbox/Research/single-cell-research/repos/LPM/data/colorectal_reduced.csv", header=F)
temp[1,]
temp[1,:]
dim(temp)
rowSums(temp)
temp<-read.csv("~/Dropbox/Research/single-cell-research/repos/LPM/data/colorectal_reduced.csv", header=T)
temp
temp[1,]
sum(temp[1,])
14 + 12 + 9 + 4+ 3*3 + 2 + 1
y<-2*2 + 2*3 + 3*4 + 2*5 + 6 + 7 + 8 + 11 + 12 + 16 + 27
x + y
x<-14 + 12 + 9 + 4+ 3*3 + 2 + 1
y<-2*2 + 2*3 + 3*4 + 2*5 + 6 + 7 + 8 + 11 + 12 + 16 + 27
x + y
x - y
x<-c(14, 12, 9, 4, 3, 3, 3, 2, 1)
y<-c(2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 11, 12, 16, 27)
(x - y)
sum(x) - sum(y)
total <- sum(x) - sum(y)
a <- c(x, -y)
a
sum(x)
total <- sum(x) - sum(y)
total
sum(a)
mean(a)
boxplot(a)
x<-c(14, 12, 9, 4, 3, 3, 3, 2, 1)
y<-c(0, 0, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 11, 12, 16, 27)
a <- c(x, -y)
mean(a)
boxplot(a)
tor<-c(30, 26, 21, 20, 16, 14, 14, 14, 12, 11, 5, 5, 4, 2, 1, 1, 0, -1, -1, -2, -2, -4, -5)
tor<-c(30, 26, 21, 20, 16, 14, 14, 14, 12, 11, 5, 5, 4, 2, 1, 1, 0, -1, -1, -2, -2, -4, -5)
boxplot(tor)
van <- c(x, -y)
mean(tor) - mean(van)
mean(tor)
(mean(tor) - mean(van))/(sd(tor) + sd(van))
(mean(tor) - mean(van))/sqrt(var(tor) + var(van))
log(10^8)
x<-rnorm(10000, 0, 1)
y<-rnorm(10000, 2.5, 1)
plot(density(x))
plot(density(x), xlim=c(-4, 8))
plot(density(y))
plot(density(x), xlim=c(-4, 8))
lines(density(y))
log(10^-6)
e2<-10-6
gamma<-0.9
e1<-10^-7
e2*gamma - e1
e2
e2<-10^-6
e2*gamma - e1
log(e2*gamma - e1)
log(e2*gamma - e1)/log(gamma)
e2*(1-gamma)
e2*(1-gamma) - e1
e2
1-gamma
e1
e1<-10^-10
e2-e1
e2*gamma
log(e2*gamma - e1)
log(e2*gamma - e1)/log(gamma)
gamma
log(gamma)
e2*(1-gamma)
e2
1-gamma
e2*(1-gamma) - e1
log(e2*(1-gamma) - e1)
log(e2*(1-gamma) - e1)/log(gamma)
1:100
t<-1:100
t^0.001
plot(t, t^0.001)
8.9e-5/ 1.3e-4
1.3e-4/8.9e-5
(1.3e-4)
x<-(1.3e-4)
y<-8.9e-5
y
x
x - y
x/y
(x - y)/x
1.7e-6
5*1.7e-6
10*8.9e-5
5*8.9e-5
2*8.9e-5
1e-4
1000*1e-4
10000*1e-4
401000*1e-4
setwd("~/Dropbox/Research/single-cell-research/repos/LPM/Datasets_csv/25genes/")
true_model_len <- 5
error_prob<-0.05
counts <- rep(0, 7)
for (rep in 0:32)
{
data_file <- paste("error", error_prob, "/rep", rep, "/inference/model_evidences_1000.csv", sep="")
model_evidences <- read.csv(data_file, header=F)
best_model_len <- dat[which.max(model_evidences$V2),1]
counts[best_model_len] <- counts[best_model_len] + 1
if (best_model_len != true_model_len) {
print(rep)
}
#data_file <- paste("error", error_prob, "/rep", rep, "/inference/log_marginals_1000.csv", sep="")
#dat <- read.csv(data_file, header=F)
#names(dat)<-c("Model", "BGP", "FBP", "Lik")
#ggplot(dat, aes(BGP, Lik, col=factor(Model))) + geom_point() + geom_line()
#temp<-subset(dat, Model == 5)
#logSumExp(temp$Lik)
}
print(counts)
print(error_prob)
counts <- rep(0, 7)
for (rep in 0:32)
{
data_file <- paste("error", error_prob, "/rep", rep, "/inference/model_evidences_1000.csv", sep="")
model_evidences <- read.csv(data_file, header=F)
best_model_len <- model_evidences[which.max(model_evidences$V2),1]
counts[best_model_len] <- counts[best_model_len] + 1
if (best_model_len != true_model_len) {
print(rep)
}
#data_file <- paste("error", error_prob, "/rep", rep, "/inference/log_marginals_1000.csv", sep="")
#dat <- read.csv(data_file, header=F)
#names(dat)<-c("Model", "BGP", "FBP", "Lik")
#ggplot(dat, aes(BGP, Lik, col=factor(Model))) + geom_point() + geom_line()
#temp<-subset(dat, Model == 5)
#logSumExp(temp$Lik)
}
print(counts)
22/33
rep
rep<-31
data_file <- paste("error", error_prob, "/rep", rep, "/inference/log_marginals_1000.csv", sep="")
dat <- read.csv(data_file, header=F)
names(dat)<-c("Model", "BGP", "FBP", "Lik")
ggplot(dat, aes(BGP, Lik, col=factor(Model))) + geom_point() + geom_line()
library(ggplot2)
ggplot(dat, aes(BGP, Lik, col=factor(Model))) + geom_point() + geom_line()
counts <- rep(0, 7)
for (rep in 0:32)
{
data_file <- paste("error", error_prob, "/rep", rep, "/inference/model_evidences_1000.csv", sep="")
model_evidences <- read.csv(data_file, header=F)
best_model_len <- model_evidences[which.max(model_evidences$V2),1]
counts[best_model_len] <- counts[best_model_len] + 1
if (best_model_len != true_model_len) {
print(paste(rep, best_model_len))
}
data_file <- paste("error", error_prob, "/rep", rep, "/inference/log_marginals_1000.csv", sep="")
dat <- read.csv(data_file, header=F)
names(dat)<-c("Model", "BGP", "FBP", "Lik")
ggplot(dat, aes(BGP, Lik, col=factor(Model))) + geom_point() + geom_line()
#temp<-subset(dat, Model == 5)
#logSumExp(temp$Lik)
}
print(counts)
rep<-30
data_file <- paste("error", error_prob, "/rep", rep, "/inference/model_evidences_1000.csv", sep="")
model_evidences <- read.csv(data_file, header=F)
best_model_len <- model_evidences[which.max(model_evidences$V2),1]
counts[best_model_len] <- counts[best_model_len] + 1
if (best_model_len != true_model_len) {
print(paste(rep, best_model_len))
}
data_file <- paste("error", error_prob, "/rep", rep, "/inference/log_marginals_1000.csv", sep="")
dat <- read.csv(data_file, header=F)
names(dat)<-c("Model", "BGP", "FBP", "Lik")
ggplot(dat, aes(BGP, Lik, col=factor(Model))) + geom_point() + geom_line()
error_prob<-0.01
print(error_prob)
counts <- rep(0, 7)
for (rep in 0:32)
{
data_file <- paste("error", error_prob, "/rep", rep, "/inference/model_evidences_1000.csv", sep="")
model_evidences <- read.csv(data_file, header=F)
best_model_len <- model_evidences[which.max(model_evidences$V2),1]
counts[best_model_len] <- counts[best_model_len] + 1
if (best_model_len != true_model_len) {
print(paste(rep, best_model_len))
}
data_file <- paste("error", error_prob, "/rep", rep, "/inference/log_marginals_1000.csv", sep="")
dat <- read.csv(data_file, header=F)
names(dat)<-c("Model", "BGP", "FBP", "Lik")
ggplot(dat, aes(BGP, Lik, col=factor(Model))) + geom_point() + geom_line()
#temp<-subset(dat, Model == 5)
#logSumExp(temp$Lik)
}
print(counts)
