}
f_0<-f(dat_0, min_count)
f_OP<-f(dat_OP, min_count)
dim(f_0)
dim(f_OP)
min_count <- 40
f <- function(dat, min_count)
{
temp<-dat[dat$b >= min_count,]
return(temp)
}
f_0<-f(dat_0, min_count)
f_OP<-f(dat_OP, min_count)
dim(f_0)
dim(f_OP)
f_0
intersect(f_0$pos, f_OP$pos)
subset(f_0, pos %in% intersect(f_0$pos, f_OP$pos))
subset(f_OP, pos %in% intersect(f_0$pos, f_OP$pos))
subset(f_OP, pos %not in% intersect(f_0$pos, f_OP$pos))
subset(f_OP, pos %notin% intersect(f_0$pos, f_OP$pos))
subset(f_OP, !(pos %in% intersect(f_0$pos, f_OP$pos)))
subset(f_0, !(pos %in% intersect(f_0$pos, f_OP$pos)))
subset(f_0, (pos %in% intersect(f_0$pos, f_OP$pos)))
subset(f_OP, (pos %in% intersect(f_0$pos, f_OP$pos)))
subset(f_0, !(pos %in% intersect(f_0$pos, f_OP$pos)))
f_0$gene
unique(f_0$gene)
min_count <- 30
f <- function(dat, min_count)
{
temp<-dat[dat$b >= min_count,]
return(temp)
}
f_0<-f(dat_0, min_count)
f_OP<-f(dat_OP, min_count)
dim(f_0)
dim(f_OP)
subset(f_0, !(pos %in% intersect(f_0$pos, f_OP$pos)))
f_0$gene
sort(f_0$gene)
min_count <- 10
f <- function(dat, min_count)
{
temp<-dat[dat$b >= min_count,]
return(temp)
}
f_0<-f(dat_0, min_count)
f_OP<-f(dat_OP, min_count)
dim(f_0)
dim(f_OP)
f_0$gene
f_0$gene == "BRCA"
sum(f_0$gene == "BRCA")
sort(f_0$gene)
sort(f_0$gene, decreasing = F)
min_count <- 0
f <- function(dat, min_count)
{
temp<-dat[dat$b >= min_count,]
return(temp)
}
f_0<-f(dat_0, min_count)
f_OP<-f(dat_OP, min_count)
dim(f_0)
dim(f_OP)
sort(f_0$gene, decreasing = F)
f_0$gene
a<-read.table("Downloads/NIHMS393264-supplement-Supplementary_Data/table_S3.txt", header=T)
a<-read.table("Downloads/NIHMS393264-supplement-Supplementary_Data/table_S3.txt", header=F)
x<-scan()
x
hist(x)
abline(v=0.64)
plot(density(x))
abline(v=0.64)
library(ggplot2)
set.seed(123)
T<-100
x<-rep(0, T)
y<-rep(0, T)
sigma<-0.16
beta<-0.64
phi<-1
x[1]<-rnorm(1, 0, sd = sigma)
y[1] <- rnorm(1, 0, beta^2 * exp(x[1]))
for (t in 2:T)
{
x[t] <- rnorm(1, phi*x[t-1], sigma)
y[t] <- rnorm(1, 0, beta^2 * exp(x[t]))
}
x
y[0]
x[1]
y[1]
write.table(x = x, file = "~/Dropbox/Research/smc-research/repos/spf/input/sv_x.txt", row.names = FALSE, col.names = FALSE)
write.table(x = y, file = "~/Dropbox/Research/smc-research/repos/spf/input/sv_y.txt", row.names = FALSE, col.names = FALSE)
x<-rgamma(10000, 0.01, 1/0.01)
x<-1/rgamma(10000, 0.01, 1/0.01)
hist(x)
max(x)
gamma(0.01)
beta<-1/0.01
beta
beta^0.01
beta^0.01/gamma(0.01)
(beta^0.01/gamma(0.01))*exp(-beta)
bet
beta
x<-1/rgamma(10000, 0.01, 0.01)
hist(x)
max(x)
x<-rgamma(10000, 0.01, 0.01)
hist(x)
max(x)
y<-1/x
max(y)
c(min(x), max(x))
x<-rgamma(10000, shape = 0.01, rate = 0.01)
hist(x)
c(min(x), max(x))
y<-1/x
x<-rgamma(10000, shape = 0.01, rate = 1)
hist(x)
c(min(x), max(x))
y<-1/x
x<-rgamma(10000, shape = 0.01, scale = 0.01)
hist(x)
c(min(x), max(x))
y<-1/x
y
x<-0
rgamma(10000, shape = 0.01, scale = 0.01)
x<-0
dgamma(x, shape = 0.01, scale = 0.01)
install.packages("BSgenome")
library(BSgenome)
install.packages("BSgenome")
install.packages("BSgenome")
install.packages("BSgenome")
library(BSgenome)
library(BSgenome)
install.packages("BSgenome")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BSgenome", version = "3.8")
library(BSgenome)
if (!requireNamespace("BiocManager", quietly = TRUE))
BiocManager::install("MutationalPatterns", version = "3.8")
BiocManager::install("MutationalPatterns", version = "3.8")
library(MutationalPatterns)
head(available.genomes())
library(BSgenome)
head(available.genomes())
ref_genome <- "BSgenome.Hsapiens.UCSC.hg19"
library(ref_genome, character.only = TRUE)
install.packages(ref_genome)
vcf_files <- list.files(system.file("extdata", package="MutationalPatterns"),
+                         pattern = ".vcf", full.names = TRUE)
vcf_files <- list.files(system.file("extdata", package="MutationalPatterns"), pattern = ".vcf", full.names = TRUE)
sample_names <- c(
+     "colon1", "colon2", "colon3",
+     "intestine1", "intestine2", "intestine3",
+     "liver1", "liver2", "liver3")
sample_names <- c("colon1", "colon2", "colon3", "intestine1", "intestine2", "intestine3", "liver1", "liver2", "liver3")
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
ref_genome <- "BSgenome.Hsapiens.UCSC.hg19"
ref_genome
BiocManager::install(ref_genome", version = "3.8")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19", version = "3.8")
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
library(ref_genome, character.only = TRUE)
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
summary(vcfs)
tissue <- c(rep("colon", 3), rep("intestine", 3), rep("liver", 3))
tissue
vcfs
sample_names
vcf_files
tissue <- c(rep("colon", 3), rep("intestine", 3), rep("liver", 3))
tissue
vcfs
? read_vcfs_as_granges
muts = mutations_from_vcf(vcfs[[1]])
muts
head(muts, 12)
types = mut_type(vcfs[[1]])
types
head(types, 12)
context = mut_context(vcfs[[1]], ref_genome)
context
type_context = type_context(vcfs[[1]], ref_genome)
lapply(type_context, head, 12)
type_occurrences <- mut_type_occurrences(vcfs, ref_genome)
type_occurrences
p1 <- plot_spectrum(type_occurrences)
p1
p2 <- plot_spectrum(type_occurrences, CT = TRUE)
p2
p3 <- plot_spectrum(type_occurrences, CT = TRUE, legend = FALSE)
p3
library("gridExtra")
install.packages("gridExtra")
library("gridExtra")
grid.arrange(p1, p2, p3, ncol=3, widths=c(3,3,1.75))
p4 <- plot_spectrum(type_occurrences, by = tissue, CT = TRUE, legend = TRUE)
p4
palette <- c("pink", "orange", "blue", "lightblue", "green", "red", "purple")
palette
p5 <- plot_spectrum(type_occurrences, CT=TRUE, legend=TRUE, colors=palette)
grid.arrange(p4, p5, ncol=2, widths=c(4,2.3))
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
head(mut_mat)
plot_96_profile(mut_mat[,c(1,7)])
plot_96_profile(mut_mat[,c(1,7)], condensed = TRUE)
a<-0.01
b<-0.01
x<-rgamma(10000, a, 1/b)
y<-1/x
max(y0)
max(y)
x<-rgamma(10000, a, b)
y<-1/x
max(y)
x<-rgamma(10000, a, 1/b)
y<-1/x
max(y)
max(x)
min(x)
x<-rgamma(10000, a, b)
y<-1/x
max(x)
min(x)
? rgamma
a<-0.01
b<-0.01
x<-rgamma(10000, shape = a, scale = 1/b)
max(x)
min(x)
y<-1/x
y
library(ggplot2)
setwd("~/Dropbox/Research/single-cell-research/repos/linear-progression/data/model_selection/model3/")
file_name <- paste("rep", rep, "/model_selection/fhat.csv" sep="")
rep<-0
file_name <- paste("rep", rep, "/model_selection/fhat.csv" sep="")
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
file_name
read.table(file_name, header=F)
read.table(file_name, header=F, skip = 1, sep=",")
d <- read.table(file_name, header=F, skip = 1, sep=",")
which.max(d$V2)
d[which.max(d$V2),"V1"]
true_model_len <- 3
idx <- d[which.max(d$V2),"V1"]
idx
counts <- rep(0, 10)
true_model_len <- 3
counts <- rep(0, 10)
for (rep in 0:99)
{
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
idx <- d[which.max(d$V2),"V1"]
counts[idx] = counts[idx] + 1
}
counts
counts <- rep(0, 10)
for (rep in 0:99)
{
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
idx <- d[which.max(d$V2),"V1"]
counts[idx] = counts[idx] + 1
if (idx != true_model_len) {
print(rep)
}
}
counts
rep<-79
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
d$V4
subset(d, V1 == 4)
d4<-subset(d, V1 == 4)
d3<-subset(d, V1 == 3)
d4$V4
library(matrixStats)
logSumExp(d4$V4)
logSumExp(d3$V4)
logSumExp(d4$V5)
logSumExp(d3$V5)
library(dplyr)
library(tidyr)
install.packages("dplyr")
install.packages("dplyr")
library(ggplot2)
library(matrixStats)
library(tidyr)
setwd("~/Dropbox/Research/single-cell-research/repos/linear-progression/data/model_selection/model3/")
library(dplyr)
d$V5
d <- read.table(file_name, header=F, skip = 1, sep=",")
d %>% split(V5)
d %>% split("V5")
d %>% group_by("V5")
d %>% group_by("V1") %>%
d4<-subset(d, V1 == 4)
d %>% group_by("V1")
d %>% group_by("V1") %>% summarise(log_marginal=logSumExp("V5"))
d %>% group_by("V1") %>% summarise(log_marginal=logSumExp(V5))
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
d %>% group_by("V1") %>% summarise(log_marginal=logSumExp(V5))
d %>% group_by(factor(V1)) %>% summarise(log_marginal=logSumExp(V5))
which.max(d2)
d2 <- d %>% group_by(factor(V1)) %>% summarise(log_marginal=logSumExp(V5))
which.max(d2)
d2[0]
as.data.frame(d2)
d2 <- d %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5))
as.data.frame(d2)
which.max(d2$log_marginal)
rep
d$V1
subset(d, V1 == 2)
subset(d, V1 == 2)$V5
logSumExp(subset(d, V1 == 2)$V5)
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
d
counts <- rep(0, 10)
for (rep in 0:99)
{
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
d2 <- as.data.frame(d %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
idx <- d[which.max(d2$log_marginal),"V1"]
counts[idx] <- counts[idx] + 1
}
counts
rep<-79
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
d2 <- as.data.frame(d %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
idx <- d[which.max(d2$log_marginal),"V1"]
idx
d[which.max(d2$log_marginal),"V1"]
which.max(d2$log_marginal)
d[which.max(d2$log_marginal),]
d2$log_marginal
d3 <- as.data.frame(d %>% group_by(model=factor(V1)) %>% summarise(log_marginal=mean(V5)))
d3
d %>% group_by(model=factor(V1))
d3 <- as.data.frame(d %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d3
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
d
rep
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
d2
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d2
counts
counts <- rep(0, 10)
for (rep in 0:99)
{
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
idx <- d[which.max(d$V2),"V1"]
counts[idx] = counts[idx] + 1
if (idx != true_model_len) {
print(rep)
}
}
counts
rep<-1
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d1
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
d2
d3
model_idx <- d[which.max(d2$log_marginal),"V1"]
model_idx
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
model_idx <- d[which.max(d3$log_marginal),"V1"]
model_idx
d3$log_marginal
counts <- rep(0, 10)
for (rep in 0:99)
{
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
model_idx <- d[which.max(d3$log_marginal),"V1"]
counts[model_idx] <- counts[model_idx] + 1
}
counts
setwd("~/Dropbox/Research/single-cell-research/repos/linear-progression/data/model_selection/model4/")
true_model_len <- 4
counts <- rep(0, 10)
for (rep in 0:85)
{
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
idx <- d[which.max(d$V2),"V1"]
counts[idx] = counts[idx] + 1
if (idx != true_model_len) {
print(rep)
}
}
counts
counts <- rep(0, 10)
for (rep in 0:99)
{
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
model_idx <- d[which.max(d3$log_marginal),"V1"]
counts[model_idx] <- counts[model_idx] + 1
}
counts
counts <- rep(0, 10)
for (rep in 0:85)
{
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
model_idx <- d[which.max(d3$log_marginal),"V1"]
counts[model_idx] <- counts[model_idx] + 1
}
counts
file_name
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d1
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d2
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
d3
model_idx <- d[which.max(d3$log_marginal),"V1"]
model_idx
counts <- rep(0, 10)
counts[model_idx] <- counts[model_idx] + 1
counts
counts <- rep(0, 10)
for (rep in 0:85)
{
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
model_idx <- d[which.max(d3$log_marginal),"V1"]
counts[model_idx] <- counts[model_idx] + 1
if (model_idx != true_model_len) {
print(rep)
}
}
counts
rep<-0
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
file_name
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d1
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
d3
d2
d3
counts <- rep(0, 10)
for (rep in 0:85)
{
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
idx <- d[which.max(d$V2),"V1"]
counts[idx] = counts[idx] + 1
if (idx != true_model_len) {
print(rep)
}
}
counts
rep<-44
file_name <- paste("rep", rep, "/model_selection/log_marginals.csv", sep="")
d1 <- read.table(file_name, header=F, skip = 1, sep=",")
d2 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V4)))
d3 <- as.data.frame(d1 %>% group_by(model=factor(V1)) %>% summarise(log_marginal=logSumExp(V5)))
d2
d3
d2
head(d1)
ggplot(d1, aes(V2, V4, col=factor(V1))) + geom_line()
ggplot(d1, aes(V2, V5, col=factor(V1))) + geom_line()
true_model_len <- 4
counts <- rep(0, 10)
for (rep in 0:90)
{
file_name <- paste("rep", rep, "/model_selection/fhat.csv", sep="")
d <- read.table(file_name, header=F, skip = 1, sep=",")
idx <- d[which.max(d$V2),"V1"]
counts[idx] = counts[idx] + 1
if (idx != true_model_len) {
print(rep)
}
}
counts
